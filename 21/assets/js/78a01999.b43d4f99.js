"use strict";(self.webpackChunkhardware_software_interface=self.webpackChunkhardware_software_interface||[]).push([[3165],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>m});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),f=a,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},3256:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(8168),a=(t(6540),t(5680));const o={},i="Hello, world!",l={unversionedId:"Lab 9 - Functions/Functions/Guides/Hello World/README",id:"Lab 9 - Functions/Functions/Guides/Hello World/README",title:"Hello, world!",description:"Open the hello_world.asm file, assemble it, and run it. Notice the display of the message Hello, world!",source:"@site/docs/Lab 9 - Functions/Functions/Guides/Hello World/README.md",sourceDirName:"Lab 9 - Functions/Functions/Guides/Hello World",slug:"/Lab 9 - Functions/Functions/Guides/Hello World/",permalink:"/hardware-software-interface/21/Lab 9 - Functions/Functions/Guides/Hello World/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Guides",permalink:"/hardware-software-interface/21/Lab 9 - Functions/Functions/Guides/"},next:{title:"Disassembling a C program",permalink:"/hardware-software-interface/21/Lab 9 - Functions/Functions/Guides/Disassemblying a C program/"}},s={},c=[],u={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"hello-world"},"Hello, world!"),(0,a.yg)("p",null,"Open the ",(0,a.yg)("inlineCode",{parentName:"p"},"hello_world.asm")," file, assemble it, and run it. Notice the display of the message ",(0,a.yg)("em",{parentName:"p"},"Hello, world!")),(0,a.yg)("p",null,"Note that:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The ",(0,a.yg)("inlineCode",{parentName:"li"},"hello_world.asm")," program uses the ",(0,a.yg)("inlineCode",{parentName:"li"},"puts")," function call (an external function of the current module) to perform the display. For this, it puts the argument on the stack and calls the function."),(0,a.yg)("li",{parentName:"ul"},"The ",(0,a.yg)("inlineCode",{parentName:"li"},"msg")," variable in the ",(0,a.yg)("inlineCode",{parentName:"li"},"hello-world.asm")," program contains the byte ",(0,a.yg)("inlineCode",{parentName:"li"},"10"),". This symbolizes the ",(0,a.yg)("em",{parentName:"li"},"line-feed")," character (",(0,a.yg)("inlineCode",{parentName:"li"},"\\n"),"), used to add a new line on Linux.")),(0,a.yg)("p",null,"Ending with ",(0,a.yg)("inlineCode",{parentName:"p"},"\\n")," is generally useful for displaying strings. The ",(0,a.yg)("inlineCode",{parentName:"p"},"puts")," function automatically adds a new line after the displayed string, but this must be explicitly added when using the ",(0,a.yg)("inlineCode",{parentName:"p"},"printf")," function."))}d.isMDXComponent=!0}}]);