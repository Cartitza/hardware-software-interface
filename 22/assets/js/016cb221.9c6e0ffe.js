"use strict";(self.webpackChunkhardware_software_interface=self.webpackChunkhardware_software_interface||[]).push([[100],{5680:(e,r,t)=>{t.d(r,{xA:()=>p,yg:()=>f});var a=t(6540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),s=function(e){var r=a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return a.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},y=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),y=n,f=u["".concat(l,".").concat(y)]||u[y]||d[y]||o;return t?a.createElement(f,i(i({ref:r},p),{},{components:t})):a.createElement(f,i({ref:r},p))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=y;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[u]="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},2970:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=t(8168),n=(t(6540),t(5680));const o={},i="4. Local Var",c={unversionedId:"Lab 8 - The Stack/Introduction/Drills/Tasks/Local Var/README",id:"Lab 8 - The Stack/Introduction/Drills/Tasks/Local Var/README",title:"4. Local Var",description:"The program local-var.asm in the laboratory archive combines two sorted arrays (array1 and array2) by placing the resulting array in array_output defined in the .data section.",source:"@site/docs/Lab 8 - The Stack/Introduction/Drills/Tasks/Local Var/README.md",sourceDirName:"Lab 8 - The Stack/Introduction/Drills/Tasks/Local Var",slug:"/Lab 8 - The Stack/Introduction/Drills/Tasks/Local Var/",permalink:"/hardware-software-interface/22/Lab 8 - The Stack/Introduction/Drills/Tasks/Local Var/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"3. Stack Addressing",permalink:"/hardware-software-interface/22/Lab 8 - The Stack/Introduction/Drills/Tasks/Stack Addressing/"},next:{title:"5. GCD - Greatest Common Divisor",permalink:"/hardware-software-interface/22/Lab 8 - The Stack/Introduction/Drills/Tasks/Bonus - GCD/"}},l={},s=[],p={toc:s},u="wrapper";function d(e){let{components:r,...t}=e;return(0,n.yg)(u,(0,a.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"4-local-var"},"4. Local Var"),(0,n.yg)("p",null,"The program ",(0,n.yg)("inlineCode",{parentName:"p"},"local-var.asm")," in the laboratory archive combines two sorted arrays (",(0,n.yg)("inlineCode",{parentName:"p"},"array_1")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"array_2"),") by placing the resulting array in ",(0,n.yg)("inlineCode",{parentName:"p"},"array_output")," defined in the ",(0,n.yg)("inlineCode",{parentName:"p"},".data")," section."),(0,n.yg)("p",null,"Modify the program so that ",(0,n.yg)("inlineCode",{parentName:"p"},"array_1"),", ",(0,n.yg)("inlineCode",{parentName:"p"},"array_2"),", and ",(0,n.yg)("inlineCode",{parentName:"p"},"array_output")," are allocated on the stack.\nThe array allocation is done using the ",(0,n.yg)("inlineCode",{parentName:"p"},"sub")," instruction.\nFor the copies of arrays ",(0,n.yg)("inlineCode",{parentName:"p"},"array_1")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"array_2"),", you will need to copy their elements from the ",(0,n.yg)("inlineCode",{parentName:"p"},".data")," section to the stack before using them."),(0,n.yg)("p",null,"If you're having difficulties solving this exercise, go through ",(0,n.yg)("a",{parentName:"p",href:"/hardware-software-interface/22/Lab%208%20-%20The%20Stack/Introduction/Reading/"},"this")," reading material"))}d.isMDXComponent=!0}}]);