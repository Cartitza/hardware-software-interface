"use strict";(self.webpackChunkhardware_software_interface=self.webpackChunkhardware_software_interface||[]).push([[1605],{5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>f});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6602:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(8168),a=(r(6540),r(5680));const o={},i="5. BONUS: GCD - Greatest Common Divisor",s={unversionedId:"Lab 8 - The Stack/Introduction/Drills/Tasks/Bonus - GCD/README",id:"Lab 8 - The Stack/Introduction/Drills/Tasks/Bonus - GCD/README",title:"5. BONUS: GCD - Greatest Common Divisor",description:"Open gcd.asm and run the program. The code calculates the greatest common divisor (GCD) of two numbers given as parameters using the eax and edx registers, and then stores the calculated value back in the eax register.",source:"@site/docs/Lab 8 - The Stack/Introduction/Drills/Tasks/Bonus - GCD/README.md",sourceDirName:"Lab 8 - The Stack/Introduction/Drills/Tasks/Bonus - GCD",slug:"/Lab 8 - The Stack/Introduction/Drills/Tasks/Bonus - GCD/",permalink:"/hardware-software-interface/22/Lab 8 - The Stack/Introduction/Drills/Tasks/Bonus - GCD/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"4. Local Var",permalink:"/hardware-software-interface/22/Lab 8 - The Stack/Introduction/Drills/Tasks/Local Var/"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.yg)(p,(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"5-bonus-gcd---greatest-common-divisor"},"5. BONUS: GCD - Greatest Common Divisor"),(0,a.yg)("p",null,"Open ",(0,a.yg)("inlineCode",{parentName:"p"},"gcd.asm")," and run the program. The code calculates the greatest common divisor (GCD) of two numbers given as parameters using the ",(0,a.yg)("inlineCode",{parentName:"p"},"eax")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"edx")," registers, and then stores the calculated value back in the ",(0,a.yg)("inlineCode",{parentName:"p"},"eax")," register."),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Make the necessary modifications so that the error message - ",(0,a.yg)("inlineCode",{parentName:"li"},"Segmentation fault (core dumped)")," - no longer appears."),(0,a.yg)("li",{parentName:"ol"},"Within the ",(0,a.yg)("inlineCode",{parentName:"li"},"print")," label, display the result in the following format:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"gcd(49,28)=7\n")))}d.isMDXComponent=!0}}]);