"use strict";(self.webpackChunkhardware_software_interface=self.webpackChunkhardware_software_interface||[]).push([[7616],{5680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>y});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,y=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?n.createElement(y,s(s({ref:r},c),{},{components:t})):n.createElement(y,s({ref:r},c))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=d;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9022:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=t(8168),a=(t(6540),t(5680));const i={},s="Keeping Records",o={unversionedId:"Lab 10 - C - Assembly Interaction/Compatibility Issues/Drills/Tasks/Registers Preserve/README",id:"Lab 10 - C - Assembly Interaction/Compatibility Issues/Drills/Tasks/Registers Preserve/README",title:"Keeping Records",description:"Navigate to drills/tasks/regs-preserve/support and open main.asm",source:"@site/docs/Lab 10 - C - Assembly Interaction/Compatibility Issues/Drills/Tasks/Registers Preserve/README.md",sourceDirName:"Lab 10 - C - Assembly Interaction/Compatibility Issues/Drills/Tasks/Registers Preserve",slug:"/Lab 10 - C - Assembly Interaction/Compatibility Issues/Drills/Tasks/Registers Preserve/",permalink:"/hardware-software-interface/24/Lab 10 - C - Assembly Interaction/Compatibility Issues/Drills/Tasks/Registers Preserve/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Warning (No Error)",permalink:"/hardware-software-interface/24/Lab 10 - C - Assembly Interaction/Compatibility Issues/Drills/Tasks/Include Fix/"},next:{title:"Stack Handling",permalink:"/hardware-software-interface/24/Lab 10 - C - Assembly Interaction/Stack Handling/"}},l={},p=[],c={toc:p},u="wrapper";function m(e){let{components:r,...t}=e;return(0,a.yg)(u,(0,n.A)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"keeping-records"},"Keeping Records"),(0,a.yg)("p",null,"Navigate to ",(0,a.yg)("inlineCode",{parentName:"p"},"drills/tasks/regs-preserve/support")," and open ",(0,a.yg)("inlineCode",{parentName:"p"},"main.asm")),(0,a.yg)("p",null,"In this subdirectory of the lab's task repository you will find the ",(0,a.yg)("inlineCode",{parentName:"p"},"print_reverse_array()")," function implemented by a simple loop that makes repeated calls of the ",(0,a.yg)("inlineCode",{parentName:"p"},"printf()")," function."),(0,a.yg)("p",null,"Follow the code in the ",(0,a.yg)("inlineCode",{parentName:"p"},"main.asm")," file, compile and run the program. What happened?\nThe program runs indefinitely. This is because the ",(0,a.yg)("inlineCode",{parentName:"p"},"printf()")," function does not preserve the value in the ",(0,a.yg)("inlineCode",{parentName:"p"},"ecx")," register, used here as a counter."),(0,a.yg)("p",null,"Uncomment the lines marked ",(0,a.yg)("inlineCode",{parentName:"p"},"TODO1")," and rerun the program."),(0,a.yg)("h1",{id:"troubleshooting-segfault"},"Troubleshooting SEGFAULT"),(0,a.yg)("p",null,"Decompose the lines marked ",(0,a.yg)("inlineCode",{parentName:"p"},"TODO2")," in the assembly file from the previous exercise.\nThe code sequence makes a call to the ",(0,a.yg)("inlineCode",{parentName:"p"},"double_array()")," function, implemented in C, just before displaying the vector using the function seen earlier."),(0,a.yg)("p",null,"Compile and run the program. To debug the segfault you can use the ",(0,a.yg)("inlineCode",{parentName:"p"},"objdump")," utility to trace the assembly language code corresponding to the ",(0,a.yg)("inlineCode",{parentName:"p"},"double_array()")," function.\nNotice which of the registers used before and after the call are modified by this function."),(0,a.yg)("p",null,"Add the instructions for preserving and restoring the required registers to the assembly file."),(0,a.yg)("p",null,"If you're having difficulties solving this exercise, go through ",(0,a.yg)("a",{parentName:"p",href:"/hardware-software-interface/24/Lab%2010%20-%20C%20-%20Assembly%20Interaction/Compatibility%20Issues/Reading/#calling-c-functions-from-assembly-procedures"},"this relevant section")," reading material."))}m.isMDXComponent=!0}}]);