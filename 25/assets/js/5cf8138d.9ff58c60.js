"use strict";(self.webpackChunkhardware_software_interface=self.webpackChunkhardware_software_interface||[]).push([[7029],{5680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>g});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(t),y=a,g=c["".concat(l,".").concat(y)]||c[y]||f[y]||o;return t?n.createElement(g,i(i({ref:r},u),{},{components:t})):n.createElement(g,i({ref:r},u))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=y;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[c]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},8331:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var n=t(8168),a=(t(6540),t(5680));const o={},i="ROP",p={unversionedId:"Lab 12 - Capture The Flag/CTF/Drills/Tasks/Bonus - ROP/README",id:"Lab 12 - Capture The Flag/CTF/Drills/Tasks/Bonus - ROP/README",title:"ROP",description:"rop/support/rop is a 64-bit binary with a simple buffer overflow.",source:"@site/docs/Lab 12 - Capture The Flag/CTF/Drills/Tasks/Bonus - ROP/README.md",sourceDirName:"Lab 12 - Capture The Flag/CTF/Drills/Tasks/Bonus - ROP",slug:"/Lab 12 - Capture The Flag/CTF/Drills/Tasks/Bonus - ROP/",permalink:"/hardware-software-interface/25/Lab 12 - Capture The Flag/CTF/Drills/Tasks/Bonus - ROP/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Feeling Chained",permalink:"/hardware-software-interface/25/Lab 12 - Capture The Flag/CTF/Drills/Tasks/Feeling Chained/"}},l={},s=[],u={toc:s},c="wrapper";function f(e){let{components:r,...t}=e;return(0,a.yg)(c,(0,n.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"rop"},"ROP"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"rop/support/rop")," is a 64-bit binary with a simple buffer overflow.\nHowever, it has NX enabled, so normal shellcode will not work.\nFind a way to create a working exploit."),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},(0,a.yg)("strong",{parentName:"p"},"TIP:")," On x86_64, function arguments are no longer found on the stack but in registers.")),(0,a.yg)("p",null,"If you're having trouble with this exercise, you may use ",(0,a.yg)("a",{parentName:"p",href:"https://www.ired.team/offensive-security/code-injection-process-injection/binary-exploitation/rop-chaining-return-oriented-programming"},"this"),".\nKeep in mind that ",(0,a.yg)("inlineCode",{parentName:"p"},"peda"),"'s functionality may be a bit different from that of the provided setup, but you should have ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/JonathanSalwan/ROPgadget"},"this"),".\nIn ",(0,a.yg)("inlineCode",{parentName:"p"},"pwndbg"),", you can use something like ",(0,a.yg)("inlineCode",{parentName:"p"},'rop --grep "pop rsi"'),"."))}f.isMDXComponent=!0}}]);