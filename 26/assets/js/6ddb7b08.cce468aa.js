"use strict";(self.webpackChunkhardware_software_interface=self.webpackChunkhardware_software_interface||[]).push([[648],{5680:(e,n,i)=>{i.d(n,{xA:()=>p,yg:()=>m});var t=i(6540);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var i=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=c(i),u=a,m=g["".concat(s,".").concat(u)]||g[u]||d[u]||r;return i?t.createElement(m,l(l({ref:n},p),{},{components:i})):t.createElement(m,l({ref:n},p))}));function m(e,n){var i=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=i.length,l=new Array(r);l[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[g]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<r;c++)l[c]=i[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,i)}u.displayName="MDXCreateElement"},4600:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var t=i(8168),a=(i(6540),i(5680));const r={},l="Linking a Single File",o={unversionedId:"Lab 12 - Linking/File Linking/Drills/Tasks/Single File Linking/README",id:"Lab 12 - Linking/File Linking/Drills/Tasks/Single File Linking/README",title:"Linking a Single File",description:"Access the directory drills/tasks/single-link/support/example/.",source:"@site/docs/Lab 12 - Linking/File Linking/Drills/Tasks/Single File Linking/README.md",sourceDirName:"Lab 12 - Linking/File Linking/Drills/Tasks/Single File Linking",slug:"/Lab 12 - Linking/File Linking/Drills/Tasks/Single File Linking/",permalink:"/hardware-software-interface/26/Lab 12 - Linking/File Linking/Drills/Tasks/Single File Linking/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Tasks",permalink:"/hardware-software-interface/26/Lab 12 - Linking/File Linking/Drills/Tasks/"},next:{title:"Linking Multiple Files",permalink:"/hardware-software-interface/26/Lab 12 - Linking/File Linking/Drills/Tasks/Multiple File Linking/"}},s={},c=[],p={toc:c},g="wrapper";function d(e){let{components:n,...i}=e;return(0,a.yg)(g,(0,t.A)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"linking-a-single-file"},"Linking a Single File"),(0,a.yg)("p",null,"Access the directory ",(0,a.yg)("inlineCode",{parentName:"p"},"drills/tasks/single-link/support/example/"),".\nWe want to follow the linking commands for a single C source file.\nThe source file is ",(0,a.yg)("inlineCode",{parentName:"p"},"hello.c"),"."),(0,a.yg)("p",null,"In the three subdirectories, you will find support files for the following scenarios:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"a-dynamic/"),": creating a dynamic executable file"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"b-static/"),": creating a static executable file"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"c-standalone/"),": creating a standalone executable file without the standard C library")),(0,a.yg)("p",null,"In each subdirectory, we use the ",(0,a.yg)("inlineCode",{parentName:"p"},"make")," command to compile the executable file ",(0,a.yg)("inlineCode",{parentName:"p"},"hello"),".\nWe use the command ",(0,a.yg)("inlineCode",{parentName:"p"},"file hello")," to check whether the file is compiled dynamically or statically."),(0,a.yg)("p",null,"In the ",(0,a.yg)("inlineCode",{parentName:"p"},"Makefile")," files, the linking command uses ",(0,a.yg)("inlineCode",{parentName:"p"},"gcc"),".\nAn equivalent command that directly uses ",(0,a.yg)("inlineCode",{parentName:"p"},"ld")," is commented out.\nTo track the direct usage of ",(0,a.yg)("inlineCode",{parentName:"p"},"ld"),", we can comment out the ",(0,a.yg)("inlineCode",{parentName:"p"},"gcc")," command and uncomment the ",(0,a.yg)("inlineCode",{parentName:"p"},"ld")," command."),(0,a.yg)("p",null,"In the case of ",(0,a.yg)("inlineCode",{parentName:"p"},"c-standalone/"),", since we are not using the standard C library or C runtime library, we need to replace their functionalities.\nThe functionalities are replaced in the ",(0,a.yg)("inlineCode",{parentName:"p"},"start.asm")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"puts.asm")," files.\nThese files implement the ",(0,a.yg)("inlineCode",{parentName:"p"},"_start")," function/symbol and the ",(0,a.yg)("inlineCode",{parentName:"p"},"puts")," function, respectively.\nThe ",(0,a.yg)("inlineCode",{parentName:"p"},"_start")," function/symbol is, by default, the entry point of an executable program.\nThe ",(0,a.yg)("inlineCode",{parentName:"p"},"_start")," function is responsible for calling the ",(0,a.yg)("inlineCode",{parentName:"p"},"main")," function and terminating the program.\nBecause there is no standard library, these two files are written in assembly language and use system calls."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Bonus"),": Add a command in the ",(0,a.yg)("inlineCode",{parentName:"p"},"Makefile")," in the ",(0,a.yg)("inlineCode",{parentName:"p"},"c-standalone/")," directory that explicitly uses ",(0,a.yg)("inlineCode",{parentName:"p"},"ld")," for linking."),(0,a.yg)("p",null,"Access the directory ",(0,a.yg)("inlineCode",{parentName:"p"},"drills/tasks/single-link/support/diy/"),".\nWe want to compile and link the source files in each subdirectory, following the model of the previous exercise."),(0,a.yg)("p",null,"Copy the ",(0,a.yg)("inlineCode",{parentName:"p"},"Makefile")," files and update them in each subdirectory to obtain the executable file."))}d.isMDXComponent=!0}}]);